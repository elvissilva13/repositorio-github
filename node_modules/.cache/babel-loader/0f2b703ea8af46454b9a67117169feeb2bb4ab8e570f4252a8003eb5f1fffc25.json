{"ast":null,"code":"var _jsxFileName = \"/home/familia/\\xC1rea de Trabalho/react/my-test/src/components/listarepositorio.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListaDeRepositorios() {\n  _s();\n  const [repositorio, setRepositorio] = useState([]);\n  useEffect(() => {\n    async function carregaRepositorios() {\n      const resposta = await fetch('https://api.github.com/users/julio-cesar96/repos');\n      const repositorio = await resposta.json();\n      console.log(repositorio);\n      console.log(resposta);\n      setRepositorio(repositorio);\n    }\n    carregaRepositorios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: repositorio.map(repositorio => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: repositorio.name\n    }, repositorio.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ListaDeRepositorios, \"h9+3T8Wtvy0e/NihLnK76F5Wd0I=\");\n_c = ListaDeRepositorios;\nexport default ListaDeRepositorios;\nvar _c;\n$RefreshReg$(_c, \"ListaDeRepositorios\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ListaDeRepositorios","_s","repositorio","setRepositorio","carregaRepositorios","resposta","fetch","json","console","log","children","map","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/familia/Área de Trabalho/react/my-test/src/components/listarepositorio.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction ListaDeRepositorios() {\n    const [repositorio, setRepositorio] = useState([]);\n    useEffect(() => {\n        async function carregaRepositorios () {\n            const resposta = await fetch('https://api.github.com/users/julio-cesar96/repos');\n            const repositorio = await resposta.json();\n          console.log(repositorio);\n          console.log(resposta);\n\n            setRepositorio(repositorio);\n          }\n          carregaRepositorios();\n        }, []);\n  return (\n    <ul>\n            {repositorio.map(repositorio => (\n              <li key={repositorio.id}>\n                {repositorio.name}\n              </li>\n            ))}\n    </ul>\n  );\n}\nexport default ListaDeRepositorios;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDD,SAAS,CAAC,MAAM;IACZ,eAAeQ,mBAAmBA,CAAA,EAAI;MAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,CAAC;MAChF,MAAMJ,WAAW,GAAG,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;MACxBM,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MAEnBF,cAAc,CAACD,WAAW,CAAC;IAC7B;IACAE,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACZ,oBACEL,OAAA;IAAAW,QAAA,EACSR,WAAW,CAACS,GAAG,CAACT,WAAW,iBAC1BH,OAAA;MAAAW,QAAA,EACGR,WAAW,CAACU;IAAI,GADVV,WAAW,CAACW,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnB,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAET;AAAChB,EAAA,CAtBQD,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAuB5B,eAAeA,mBAAmB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}